---
- hosts: all
  become: true
  tasks:
  - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
    shell: |
      swapoff -a
  - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https 
      - ca-certificates 
      - curl 
      - gnupg 
      - lsb-release

  - name: Add an apt signing key for Docker
    shell: |
      curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg


  - name: Add apt repository for stable version
    shell: |
      echo   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" \
      | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.22.5-00
        - kubeadm=1.22.5-00
        - kubectl=1.22.5-00

  - name: Create /etc/default/kubelet
    file:
      path: /etc/default/kubelet
      state: touch

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
  
  - name: Creating a file with content
    copy:
      dest: "/tmp/kubeadm-tmp.yaml"
      content: |
        # kubeadm-config.yaml
        apiVersion: kubeadm.k8s.io/v1beta3
        kind: InitConfiguration
        localAPIEndpoint:
          advertiseAddress: "192.168.50.10"
          bindPort: 6443
        ---
        kind: ClusterConfiguration
        apiVersion: kubeadm.k8s.io/v1beta3
        kubernetesVersion: v1.22.1
        controlPlaneEndpoint: "192.168.50.10:6443"
        networking:
          dnsDomain: cluster.local
          podSubnet: 172.16.0.0/16
        apiServer:
          certSANs:
          - "192.168.50.10"
        ---
        kind: KubeletConfiguration
        apiVersion: kubelet.config.k8s.io/v1beta1
        cgroupDriver: cgroupfs

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    become: true
    command: kubeadm init --config /tmp/kubeadm-tmp.yaml

  - name: Setup kubeconfig for vagrant user
    become: true
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp  /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Copy admin config to localhost
    fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: yes

  handlers:
    - name: docker status
      service: name=docker state=started
